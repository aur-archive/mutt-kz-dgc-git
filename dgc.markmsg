Adds <mark-message> binding to create "hotkeys" for messages.

<mark-message>foo<enter> will create a new macro "'foo" which will
return to the current message by searching for that message's
message id.  The initial character of the macro is defined by
$mark_macro_prefix, and defaults to "'" for verisimilitude vs. vi.

diff -r 634325d44323 OPS
--- a/OPS	Mon Jan 03 13:23:36 2011 -0600
+++ b/OPS	Mon Jan 03 13:23:46 2011 -0600
@@ -133,6 +133,7 @@
 OP_MAIN_TAG_PATTERN "tag messages matching a pattern"
 OP_MAIN_UNDELETE_PATTERN "undelete messages matching a pattern"
 OP_MAIN_UNTAG_PATTERN "untag messages matching a pattern"
+OP_MARK_MSG "create a hot-key macro for the current message"
 OP_MIDDLE_PAGE "move to the middle of the page"
 OP_NEXT_ENTRY "move to the next entry"
 OP_NEXT_LINE "scroll down one line"
diff -r 634325d44323 curs_main.c
--- a/curs_main.c	Mon Jan 03 13:23:36 2011 -0600
+++ b/curs_main.c	Mon Jan 03 13:23:46 2011 -0600
@@ -2083,6 +2083,32 @@
 	}
 	break;
 
+
+      case OP_MARK_MSG:
+
+	if (CURHDR->env->message_id)
+	{
+	  char str[STRING], macro[STRING];
+	  char buf[128];
+
+	  buf[0] = '\0';
+	  if (!mutt_get_field ("Enter macro stroke: ", buf, sizeof(buf),
+	  		       M_CLEAR) && buf[0])
+	  {
+	    snprintf(str, sizeof(str), "%s%s", MarkMacroPrefix, buf);
+	    snprintf(macro, sizeof(macro),
+		     "<search>~i \"%s\"\n", CURHDR->env->message_id);
+	    km_bind(str, MENU_GENERIC, OP_MACRO, macro, "Message hotkey");
+
+	    snprintf(buf, sizeof(buf), _("Message bound to %s."), str);
+	    mutt_message(buf);
+	    dprint (1, (debugfile, "Mark: %s => %s\n", str, macro));
+	  }
+	}
+	else
+	  mutt_error _("No message ID to macro.");
+	break;
+
       case OP_RECALL_MESSAGE:
 
 	CHECK_ATTACH;
diff -r 634325d44323 functions.h
--- a/functions.h	Mon Jan 03 13:23:36 2011 -0600
+++ b/functions.h	Mon Jan 03 13:23:46 2011 -0600
@@ -65,6 +65,7 @@
   { "previous-line",	OP_PREV_LINE,		"<" },
   { "half-up",		OP_HALF_UP,		"[" },
   { "half-down", 	OP_HALF_DOWN,		"]" },
+  { "mark-message",	OP_MARK_MSG,		"~" },
   { "help",		OP_HELP,		"?" },
   { "tag-prefix",	OP_TAG_PREFIX,		";" },
   { "tag-prefix-cond",	OP_TAG_PREFIX_COND,	NULL },
diff -r 634325d44323 globals.h
--- a/globals.h	Mon Jan 03 13:23:36 2011 -0600
+++ b/globals.h	Mon Jan 03 13:23:46 2011 -0600
@@ -79,6 +79,7 @@
 WHERE char *HeaderCachePageSize;
 #endif /* HAVE_GDBM || HAVE_DB4 */
 #endif /* USE_HCACHE */
+WHERE char *MarkMacroPrefix;
 WHERE char *MhFlagged;
 WHERE char *MhReplied;
 WHERE char *MhUnseen;
diff -r 634325d44323 init.h
--- a/init.h	Mon Jan 03 13:23:36 2011 -0600
+++ b/init.h	Mon Jan 03 13:23:46 2011 -0600
@@ -1356,6 +1356,14 @@
   ** The locale used by \fCstrftime(3)\fP to format dates. Legal values are
   ** the strings your system accepts for the locale environment variable \fC$$$LC_TIME\fP.
   */
+  /* this absurd location avoids conflict with ats.mark_old patch */
+  { "mark_macro_prefix",DT_STR, R_NONE, UL &MarkMacroPrefix, UL "'" },
+  /*
+  ** .pp
+  ** Prefix for macros created using mark-message.  A new macro
+  ** automatically generated with \fI<mark-message>a\fP will be composed
+  ** from this prefix and the letter \fIa\fP.
+  */
   { "mail_check",	DT_NUM,  R_NONE, UL &BuffyTimeout, 5 },
   /*
   ** .pp
